
<?
 function typename($typeid)
 {
  $typename = Yii::app()->db->createCommand()->select('type_name')->from('q_type')->where('type_id=:type_id', array(':type_id'=>$typeid))->queryRow();
  return $typename['type_name'];
 }
 function oprtionscounctcheck($questionid)
 {
  $oprtions_count = QuestionOptions::Model()->count("question_id='$questionid'");
  return $oprtions_count;
 }
 function oprtionsquestionsarray($questionid)
 {
  $oprtions_questionsarray = QuestionOptions::model()->findAll(array('condition'=>"question_id='$questionid' and content!='' group by content order by date_added "));
  return $oprtions_questionsarray;
 } 
 function mainquestion($q_id)
 {
 $main_quest=Yii::app()->db->createCommand()->select('question,a_type,q_type,id,content,discipline_id')->from('q_query')->where('id=:id', array(':id'=>$q_id))->queryRow();
 return $main_quest;
 }
 function moredetailerealtedqsnsfuncion($category_id)
 {
  $moeredetqsnlist= QQuery::model()->findAll(array('condition'=>"category_id ='$category_id' and q_type=1 and parent_q_id=1"));
  return $moeredetqsnlist;
 }
  function discplinelistfunc()
 {
  $discplinelistfrd= Disciplines::model()->findAll(array('condition'=>'parent =0 and language=2'));
  return $discplinelistfrd;
 }
 
 function discplinerelatedquestionfunc($category_id,$discipline_id)
 {
  $discplinelistqsns= QQuery::model()->findAll(array('condition'=>"category_id='$category_id' and q_type=2 and discipline_id='$discipline_id'"));
  return $discplinelistqsns;
 }
 function fetchquestionvaluefunc($id)
 {
 $main_quest=Yii::app()->db->createCommand()->select('question,content,category_id,q_type,a_type,discipline_id')->from('q_query')->where('id=:id', array(':id'=>$id))->queryRow();
 return $main_quest;
 }
 function questiontypeanswerresultfunc($type,$question_id,$question_title)
 {
  $sqm="sqm";
  $length="Length";
  $width="Width";
  $height="Height";
  if($type=='1')
  {
  $a="<input type='text' size='200' name='answer[$question_id]' inputId='$question_id' title='$question_title'>";
  }
  else if($type=='6') {
   $a="<input type='text' size='200' name='answer[$question_id]' inputId='$question_id' title='$question_title'> $sqm";
  }
  else if($type=='7') {
   $a="$length <input type='text' size='200' name='answer[$question_id]' inputId='$question_id' title='$question_title'>";
  }
   else if($type=='8') {
   $a="$width <input type='text' size='200' name='answer[$question_id]' inputId='$question_id' title='$question_title'>";
  }
   else if($type=='9') {
   $a="$height <input type='text' size='200' name='answer[$question_id]' inputId='$question_id' title='$question_title'> ";
  }
   else if($type=='10') {
   $a="<textarea name='answer[$question_id]' inputId='$question_id' ></textarea>";
  }
   else if($type=='2') {
   $list_options = oprtionsquestionsarray($question_id);
   $a = "<select name='answer[$question_id]' inputId='$question_id'>";
   $a .="<option value=''>Select Type</option> ";
		  foreach($list_options as $list_options_key => $list_options_value) 
		  { 
   $a .= "<option value='$list_options_value[content]'>$list_options_value[content]</option>"; 
		   } 
   $a .="</select>";
  }
   else if($type=='4') {
  
   $list_options = oprtionsquestionsarray($question_id);
   $a="&nbsp;";
   foreach($list_options as $list_options_key => $list_options_value) 
		  { 
   $a.= "<input type='radio' name='answer[$question_id]' inputId='$question_id' value='$list_options_value[auto_id]' />&nbsp;";
   $a.="$list_options_value[content]";
   $a.="&nbsp;";
          }
  }
   else if($type=='3') {
   $list_options = oprtionsquestionsarray($question_id);
   $a="&nbsp;";	 
   foreach($list_options as $list_options_key => $list_options_value) 
		  { 
   $a.= "<input type='checkbox' name='answer[$question_id]' inputId='$question_id' value='$list_options_value[auto_id]' />&nbsp;";
   $a.="$list_options_value[content]";
   $a.="&nbsp;";		  
 
          }
  }
  return $a;
 } 
   function discplinenamefunc($id)
 {
  $discpname = Yii::app()->db->createCommand()->select('name')->from('disciplines')->where('id=:id', array(':id'=>$id))->queryRow();
  return $discpname['name'];
 }
 function dicsplinequestionscounctcheck($category_id,$discp_id)
 {
  $dicspqsns_count = QQuery::Model()->count("discipline_id='$discp_id' and category_id='$category_id'");
  return $dicspqsns_count;
 } 
  function projectquestiontypeanswerresultfunc($type,$question_id,$question_title)
 {
  $sqm="sqm";
  $length="Length";
  $width="Width";
  $height="Height";
 // print $question_id;
  if($type=='1')
  {
  $a="<input type='text' size='200' name='Project[$question_id]' inputId='$question_id' title='$question_title'>";
  }
  else if($type=='6') {
   $a="<input type='text' size='200' name='Project[$question_id]' inputId='$question_id' title='$question_title'> $sqm";
  }
  else if($type=='7') {
   $a="$length <input type='text' size='200' name='Project[$question_id]' inputId='$question_id' title='$question_title'>";
  }
   else if($type=='8') {
   $a="$width <input type='text' size='200' name='Project[$question_id]' inputId='$question_id' title='$question_title'>";
  }
   else if($type=='9') {
   $a="$height <input type='text' size='200' name='Project[$question_id]' inputId='$question_id' title='$question_title'> ";
  }
   else if($type=='10') {
   $a="<textarea name='Project[$question_id]' inputId='$question_id' ></textarea>";
  }
   else if($type=='2') {
   
   $list_options = oprtionsquestionsarray($question_id);
   $a = "<select name='Project[$question_id]' inputId='$question_id' onchange='selectClassif(this)' >";
   $a .="<option value=''>Select Type</option> ";
		  foreach($list_options as $list_options_key => $list_options_value) 
		  { 
   $a .= "<option value='$list_options_value[auto_id]'>$list_options_value[content]</option>"; 
		   } 
   $a .= "<option value='-1' style='color: red; font-weight: bold;'>Add New</option>";		   
   $a .="</select>";
  }
   else if($type=='4') {
   $list_options = oprtionsquestionsarray($question_id);
   foreach($list_options as $list_options_key => $list_options_value) 
		  { 
   $a = "<input type='radio' name='Project[$question_id]' inputId='$question_id' value='$list_options_value[auto_id]' /> $list_options_value[content]";
          }
  }
   else if($type=='3') {
   $list_options = oprtionsquestionsarray($question_id);
   foreach($list_options as $list_options_key => $list_options_value) 
		  { 
   $a = "<input type='checkbox' name='Project[$question_id]' inputId='$question_id' value='$list_options_value[auto_id]' /> $list_options_value[content]";
          }
  }
  return $a;
 }  
  function questioncategoryidget($q_id)
  {
  $main_quest=Yii::app()->db->createCommand()->select('category_id')->from('q_query')->where('id=:id', array(':id'=>$q_id))->queryRow();
   return $main_quest['category_id'];
  }
   function questiondiscpidget($q_id)
  {
  $main_ques_dicp=Yii::app()->db->createCommand()->select('discipline_id')->from('q_query')->where('id=:id', array(':id'=>$q_id))->queryRow();
   return $main_ques_dicp['discipline_id'];
  }
  
  function questionqtypegetid($q_id)
  {
  $main_ques_qtype=Yii::app()->db->createCommand()->select('q_type')->from('q_query')->where('id=:id', array(':id'=>$q_id))->queryRow();
   return $main_ques_qtype['q_type'];
  }
  
   function questionanswertypechefunc($q_id,$ans_id)
  {
  $main_quest=Yii::app()->db->createCommand()->select('a_type')->from('q_query')->where('id=:id', array(':id'=>$q_id))->queryRow();
  $a_type=$main_quest['a_type']; 
  if(($a_type=='2') || ($a_type=='3') || ($a_type=='4'))
    {
   $main_quest=Yii::app()->db->createCommand()->select('content')->from('question_options')->where('auto_id=:auto_id', array(':auto_id'=>$ans_id))->queryRow();
   $ans=  $main_quest['content'];
   return $ans;
	} else 
	{
	return $ans_id;
	}
  }
  function userdetailsfetchfunc($userdbid)
  {
   $main_quest=Yii::app()->db->createCommand()->select('fname,lname,email')->from('users')->where('id=:id', array(':id'=>$userdbid))->queryRow();
   return $main_quest;
  }
  function roomtypeselectionbox($ques_id)
  {
  
  $list_options_db =  QuestionOptions::model()->findAll(array('condition'=>"question_id='$ques_id' and content!='' group by content order by date_added "));
   $b = "<select name='roomName' onchange='selectClassif(this)' inputId='$ques_id' class='roomselctboxvalues' >";
/*   $b .="<option value='0'>Select Type</option> ";
*/		  foreach($list_options_db as $list_options_dbkey => $list_options_dbvalue) 
		  { 
   $b .= "<option value='$list_options_dbvalue[content]'>$list_options_dbvalue[content]</option>"; 
		   } 
   $b .= "<option value='-1' style='color: red; font-weight: bold;'>Add New</option>";
   $b .="</select>";
   return $b;
  } 
  
 function answertypefunc($q_id)
 {
 $quest_answertype=Yii::app()->db->createCommand()->select('a_type')->from('q_query')->where('id=:id', array(':id'=>$q_id))->queryRow();
 return $quest_answertype['a_type'];
 }
 
function questionansweroptionfunc($q_id,$content)
  {
     $main_quest=Yii::app()->db->createCommand()->select('auto_id')->from('question_options')->where('question_id=:question_id AND content = :content', array(':question_id'=>$q_id, ':content' =>$content))->queryRow();
 
    $auto_id=  $main_quest['auto_id'];
     return $auto_id;
  }
  
 
  
 function userprojectaccess($pro_id)
{
     $uid=Yii::app()->user->id;
	 if($uid=='1')
	 {
	 $count=1;
	 }
	 else{
     $count = QuestionProject::Model()->count("project_id='$pro_id' and user_id='$uid'");
         }
	  
	if($count>0)
	{
		return $count;
	}
	else
	{
		return(0);
	}
	   
}
 
  function projectviewfunc($category_id,$q_type,$project_id)
 {
  $allquestions= QuestionAnswers::model()->findAll(array('condition'=>"category_id ='$category_id' and q_type='$q_type' and project_id='$project_id'"));
  return $allquestions;
 } 
 
  function discplinecountfunc($category_id,$q_type,$discp_id,$project_id)
  {
   $count = QuestionAnswers::Model()->count("category_id ='$category_id' and q_type='$q_type' and project_id='$project_id' and discp_id='$discp_id'");
   return $count; 
  }
  
    function level_discplinecountfunc($category_id,$q_type,$discp_id,$project_id,$level_id)
  {
   $count = QuestionAnswers::Model()->count("category_id ='$category_id' and q_type='$q_type' and project_id='$project_id' and discp_id='$discp_id' and level_id='$level_id' and room_id is null");
   return $count; 
  }
   function room_discplinecountfunc($category_id,$q_type,$discp_id,$project_id,$level_id,$room_id)
  {
   $count = QuestionAnswers::Model()->count("category_id ='$category_id' and q_type='$q_type' and project_id='$project_id' and discp_id='$discp_id' and level_id='$level_id' and room_id='$room_id'");
   return $count; 
  }
  
  
 
  function projectview_dsicp_func($category_id,$q_type,$discp_id,$project_id)
 {
  $allquestions= QuestionAnswers::model()->findAll(array('condition'=>"category_id ='$category_id' and project_id='$project_id' and discp_id='$discp_id'"));
  return $allquestions;
 } 
 
   function levelview_dsicp_func($category_id,$q_type,$discp_id,$project_id,$level_id)
 {
  $allquestions= QuestionAnswers::model()->findAll(array('condition'=>"category_id ='$category_id' and project_id='$project_id' and discp_id='$discp_id' and level_id='$level_id' and room_id is null"));
  return $allquestions;
 } 
 
    function roomview_dsicp_func($category_id,$q_type,$discp_id,$project_id,$level_id,$room_id)
 {
  $allquestions= QuestionAnswers::model()->findAll(array('condition'=>"category_id ='$category_id' and project_id='$project_id' and discp_id='$discp_id' and level_id='$level_id'  and room_id='$room_id'"));
  return $allquestions;
 } 
 
 
 function levelnamefunc($project_id,$level_id)
 {
   $slevelnamearray= QuestionAnswers::model()->find(array('condition'=>"project_id ='$project_id' and level_id='$l' and question_id='0' and room_id is null"));
   return $slevelnamearray;
 
 }  
 
 function levelviewfunc($category_id,$q_type,$project_id,$level_id)
 {
  $allquestions= QuestionAnswers::model()->findAll(array('condition'=>"category_id ='$category_id' and q_type='$q_type' and project_id='$project_id' and level_id='$level_id' "));
  return $allquestions;
 } 
  
 function roomcountfunc($project_id,$level_id)
 {
 
 $rcount= Yii::app()->db->createCommand()->select('rooms')->from('question_rooms')->where('project_id=:project_id AND level_id = :level_id', array(':project_id'=>$project_id, ':level_id' =>$level_id))->queryRow();
 
 return $rcount['rooms'];
 } 
 
  function roomviewfunc($category_id,$q_type,$project_id,$level_id,$room_id)
 {
  $allquestions= QuestionAnswers::model()->findAll(array('condition'=>"category_id ='$category_id' and q_type='$q_type' and project_id='$project_id' and level_id='$level_id' and room_id='$room_id' "));
  return $allquestions;
 }
 
 function projectnamefunc($project_id) 
 {
   $pronamearray= QuestionProject::model()->find(array('condition'=>"project_id ='$project_id'"));
   return $pronamearray['project_name'];
 }

  function levelcountfunc($project_id) 
 {
   $pronamearray= QuestionProject::model()->find(array('condition'=>"project_id ='$project_id'"));
   return $pronamearray['level_count'];
 }  
  
?>
